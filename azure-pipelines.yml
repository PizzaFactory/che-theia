# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- azure-pipelines

jobs:
- job: Build
  timeoutInMinutes: 0

  variables:
    - group: che-theia
    - name: organization
      value: camino
    - name: prefix
      value: che
    - name: tag
      value: next

  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - script: yarn
    displayName: Run yarn.

  - script: |
      cd dockerfiles/theia-dev
      ./build.sh --build-arg:GITHUB_TOKEN=$(github_token) --organization:$(organization) --tag:$(tag) --prefix:$(prefix)
    displayName: Building theia-dev

#  - script: |
#      cd dockerfiles/theia
#      ./build.sh --build-args:GITHUB_TOKEN=$(github_token),THEIA_VERSION=master --tag:$(tag) --prefix:$(prefix) --branch:master --git-ref:refs\\/heads\\/master --organization:$(organization)
#    displayName: Building Theia

  - script: |
      cd dockerfiles/theia-endpoint-runtime
      ./build.sh --build-args:GITHUB_TOKEN=$(github_token),THEIA_VERSION=master --tag:$(tag) --prefix:$(prefix) --branch:master --git-ref:refs\\/heads\\/master --organization:$(organization)
    displayName: Building Theia-endpoint-runtime

  - script: |
      for i in $(find dockerfiles -maxdepth 1 -type d -name 'remote-*'); do
        (cd $i;
        ./build.sh --build-args:GITHUB_TOKEN=$(github_token),THEIA_VERSION=master --tag:$(tag) --prefix:$(prefix) --branch:master --git-ref:refs\\/heads\\/master --organization:$(organization) )
      done
    displayName: Building remote-* containers

  - task: Docker@1
    displayName: Container registry login
    inputs:
      command: login
      dockerRegistryEndpoint: camino.azurecr.io
      containerRegistryType: Container Registry

  - script: |
      for i in $(cd dockerfiles; find * -type d -maxdepth 0); do
        docker tag $(organization)/$i:$(tag) camino.azurecr.io/$(organization)/$i:$(tag)
        docker push camino.azurecr.io/$(organization)/$i:$(tag)
      done
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    displayName: Pushing

  - script: |
      for i in $(cd dockerfiles; find * -type d -maxdepth 0); do
        docker tag $(organization)/$i:$(tag) camino.azurecr.io/$(organization)/$i:$(tag)-pr$(System.PullRequest.PullRequestNumber)
        docker push camino.azurecr.io/$(organization)/$i:$(tag)-pr$(System.PullRequest.PullRequestNumber)
      done
    condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
    displayName: Pushing (staging)
